Please see the following links for more information on geometry shaders.
	https://open.gl/geometry
	https://www.khronos.org/opengl/wiki/Geometry_Shader
	http://www.informit.com/articles/article.aspx?p=2120983&seqNum=2

The vertex shader runs once per vertex.
The geometry shader runs once per primitive received from the vertex shader (point, line or triangle) and has access to the vertices of that primitive.
This program's vertex shader always outputs point primatives.

out can have these primitive types
	points
	line_strip
	triangle_strip

Definition for gl_in[]
in gl_PerVertex {
    vec4  gl_Position;
    float gl_PointSize;
    float gl_ClipDistance[];
} gl_in[];

This program's vertex shader is outputing GL_POINTS primitives and so gl_in[] has length of 1.

// Pass-Through geometry shader body
void main() {
	for (i = 0; i < gl_in.length(); i++) {
		gl_Position = gl_in[i].gl_Position;
		EmitVertex();
	}
}

-----------------------TODO
multiple input methods
keyboard
mouse
is key down
is mouse down
direction keys push a point around a grid
mouse down&drag push a point around the plane
direction point history
mouse drag point history
key press history
mouse down history
mouse history

I like having like a micro fft (micro in height) at the bottom of the window
  it has a nice asthetic

Can I map the lissajous curve onto the sphere nicely? that probably would visualize really nice
  think about a path traced sphere with the lissajous mapped onto it... mouth waters
